{"version":3,"sources":["components/DisplayWeather.js","components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayWeather","props","data","console","log","iconurl","cod","weather","icon","className","Fragment","name","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","description","temp_max","temp_min","humidity","pressure","visibility","wind","speed","deg","sunrise","sunset","message","Weather","APIKEY","useState","city","form","setForm","setWeather","e","a","preventDefault","alert","fetch","then","res","json","handleChange","target","value","type","placeholder","onChange","onClick","weatherData","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fca63989.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction DisplayWeather(props) {\r\n    const {data}=props;\r\n    console.log(data);\r\n\r\n    const iconurl=\"http://openweathermap.org/img/wn/\" + `${data.cod != 404 ? data.weather[0].icon : null}` + \".png\";\r\n    return (\r\n        <div className=\"displayweather\">\r\n          {\r\n              data.cod != 404 ?\r\n              <React.Fragment>\r\n                  <div className=\"maincard\">\r\n              <span className=\"cardtitle\">\r\n                  {data.name},{data.sys.country}. weather\r\n              </span>\r\n              <span className=\"cardsubtitle\">\r\n                  As of {new Date().toLocaleTimeString()}\r\n              </span>\r\n              <h1>\r\n                 {Math.floor(data.main.temp - 273.15)}\r\n                 <sup>o</sup>\r\n              </h1>\r\n              <span className=\"weather-main\">{data.weather[0].main}</span>\r\n              <img src={iconurl} className=\"weather-icon\" alt=\"\"/>\r\n              <span className=\"weather-description\">\r\n                  {data.weather[0].description}\r\n              </span>\r\n          </div> \r\n          <div  className=\"weatherdetails\">\r\n              <div className=\"section1\">\r\n                  <table>\r\n                  <thead>\r\n                  <tr>\r\n                  <th></th>\r\n                      <th></th>\r\n                  </tr>\r\n                      \r\n                  </thead>\r\n                  <tbody>\r\n                      <tr>\r\n                          <td>\r\n                              <h4>High/Low</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {Math.floor(data.main.temp_max - 273.15)}/{\" \"}\r\n                                  {Math.floor(data.main.temp_min - 273.15)} <sup>o</sup> C\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Humidity</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {data.main.humidity} %\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Pressure</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {data.main.pressure} hpa\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      \r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Visibility</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {data.visibility/1000} km\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n                      </tbody>\r\n                  </table>\r\n                  \r\n              </div>\r\n              <div className=\"section2\">\r\n              <table>\r\n                <thead>\r\n                <tr><th></th>\r\n                    <th></th></tr>\r\n                    \r\n                </thead>\r\n              <tbody>\r\n\r\n              \r\n                      <tr>\r\n                          <td>\r\n                              <h4>Wind</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {Math.floor(data.wind.speed*18)/5} km/hr\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Wind direction</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {data.wind.deg}<sup>o</sup>\r\n                                   deg\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Sunrise</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {new Date(data.sys.sunrise*1000).toLocaleTimeString()}\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n\r\n                      <tr>\r\n                          <td>\r\n                              <h4>Sunset</h4>\r\n                          </td>\r\n                          <td>\r\n                              <span>\r\n                                  {new Date(data.sys.sunset*1000).toLocaleTimeString()}\r\n                              </span>\r\n                          </td>\r\n                      </tr>\r\n                      </tbody>\r\n                  </table>      \r\n              </div>\r\n          </div> \r\n              </React.Fragment>\r\n              : <div className=\"maincard\">\r\n                  <h2>{data.message}</h2>\r\n                  </div>\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayWeather\r\n","import React, {useState} from 'react'\r\nimport { FormCheck } from 'react-bootstrap';\r\nimport DisplayWeather from './DisplayWeather';\r\nimport './weather.css';\r\n\r\nfunction Weather() {\r\n\r\n    const APIKEY=\"67657335913d790995fb1af530f90a74\";\r\n\r\n\r\n    const [form,setForm]=useState({\r\n        city:\"\",\r\n        country:\"\"\r\n    })\r\n    \r\n    const [weather,setWeather]=useState([])\r\n\r\n    async function weatherData(e){\r\n        e.preventDefault();\r\n        if(form.city==\"\"){\r\n            alert(\"Add values\");\r\n        }else{\r\n            const data=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&appid=${APIKEY}`\r\n            ).then((res)=>res.json())\r\n            .then((data)=>data);\r\n            setWeather(\r\n                {\r\n                    data:data\r\n                }\r\n            );\r\n        }\r\n    }\r\n    const handleChange=(e)=>{\r\n        let name=e.target.name;\r\n        let value=e.target.value;\r\n\r\n        if(name==\"city\"){\r\n            setForm({...form,city:value})\r\n        }\r\n        if(name==\"country\"){\r\n            setForm({...form,country:value})\r\n        }\r\n        console.log(form.city,form.country);\r\n    };\r\n    return (\r\n        <div className=\"weather\">\r\n            <span className=\"title\">Weather App</span>\r\n            <br/>\r\n\r\n            <form>\r\n                <input type=\"text\" className=\"city\" name=\"city\" placeholder=\"city\" onChange={e=>handleChange(e)}/>\r\n                &nbsp; &nbsp; &nbsp; &nbsp;\r\n                <input type=\"text\" className=\"country\" name=\"country\" placeholder=\"country\" onChange={e=>handleChange(e)}/>\r\n\r\n                <button className=\"getweather\" onClick={(e)=>weatherData(e)}>Submit</button>\r\n            </form>\r\n            {weather.data !=undefined ? (\r\n                <div>\r\n                    <DisplayWeather data={weather.data} />\r\n                </div>\r\n                \r\n            ):null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\nimport \"./App.css\"\nimport Weather from \"./components/Weather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}